index index.php;
# Needed for Shopware install / update
location /recovery/install {
    index index.php;
    try_files $uri /recovery/install/index.php$is_args$args;
}

location /recovery/update/ {
    if (!-e $request_filename){
        rewrite . /recovery/update/index.php last;
    }
}

location ~* ^.+\.(?:css|cur|js|jpe?g|gif|ico|png|svg|webp|html|woff|woff2|xml)$ {
   expires 1y;
   add_header Cache-Control "public, must-revalidate, proxy-revalidate";

   access_log off;

   # The directive enables or disables messages in error_log about files not found on disk.
   log_not_found off;

   tcp_nodelay off;

   ## Set the OS file cache.
   open_file_cache max=3000 inactive=120s;
   open_file_cache_valid 45s;
   open_file_cache_min_uses 2;
   open_file_cache_errors off;
}

location ~* ^.+\.svg$ {
   add_header Content-Security-Policy "script-src 'none'";
}

# Forward any not found file to index.php. Also allows to have beautiful urls like /homemade-products/
location / {
    try_files $uri /index.php$is_args$args;
}

# Let php-fpm handle .php files
location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;


    fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
    fastcgi_param  SERVER_SOFTWARE    nginx;
    fastcgi_param  QUERY_STRING       $query_string;
    fastcgi_param  REQUEST_METHOD     $request_method;
    fastcgi_param  CONTENT_TYPE       $content_type;
    fastcgi_param  CONTENT_LENGTH     $content_length;
    fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
    fastcgi_param  REQUEST_URI        $request_uri;
    fastcgi_param  DOCUMENT_URI       $document_uri;
    fastcgi_param  DOCUMENT_ROOT      $document_root;
    fastcgi_param  SERVER_PROTOCOL    $server_protocol;
    fastcgi_param  REMOTE_ADDR        $remote_addr;
    fastcgi_param  REMOTE_PORT        $remote_port;
    fastcgi_param  SERVER_ADDR        $server_addr;
    fastcgi_param  SERVER_PORT        $server_port;
    fastcgi_param  SERVER_NAME        $server_name;


    fastcgi_param HTTP_PROXY "";
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;
    fastcgi_read_timeout 300s;
    client_body_buffer_size 128k;
    fastcgi_pass $PHP;
    http2_push_preload on;
}